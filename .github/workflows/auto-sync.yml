name: Sync Fork

on:
  # schedule:
  #   - cron: '*/30 * * * *' # every 30 minutes
  workflow_dispatch: # on button click

jobs:
  list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list_repos.outputs.result }}
    steps:
      - uses: actions/github-script@v7
        id: list_repos
        with:
          script: |
            const res = await github.rest.repos.listForOrg({
              org: context.repo.owner
            });
            const repos = res.data.filter(repo => {
              if (repo.fork) {
                return {
                  name: repo.name
                };
              }
            });

            return await Promise.all(repos.map(async (repo) => {
              const res = await github.rest.repos.get({
                owner: context.repo.owner,
                repo: repo.name
              });

              return {
                fork: res.data.full_name,
                parent: res.data.parent.full_name,
                default_branch: res.data.default_branch
              };
            }));
  sync:
    runs-on: ubuntu-latest
    needs: list
    permissions:
      contents: write
    strategy:
      matrix:
        repo: ${{ fromJson(needs.list.outputs.matrix) }}
    steps:
      - run: |
          echo "syncing $REPOSITORY from $UPSTREAM for branch $BRANCH_NAME"
          gh repo sync $REPOSITORY --source $UPSTREAM --branch $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ matrix.repo.fork }}
          UPSTREAM: ${{ matrix.repo.parent }}
          BRANCH_NAME: ${{ matrix.repo.default_branch }}
